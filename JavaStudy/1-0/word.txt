■ IT
	IT（Information Technology)
		情報技術、コンピュータをベースとした情報システム
		アプリケーションやハードウェアの研究、デザイン開発などの総称
		（レガシー→IT（行為））
	ICT（Information and Communication Technology）
		情報通信科学
		大義ではITと同義、ITの特色で有る通信を含めた定義
		最近では主にICTが用いられる事が多い
	IoT（Internet of Things）
		モノのインターネット
		家電等従来は通信技術と独立した機器を、インターネットにつなぐ事により
		インターネットを媒介した通信を行う事ができる技術
		(Alexa、スマートロック等）
■ OS
	OS（Operation System）
		アプリやデバイスを動作させ得るための基本となるソフトウェア
		大多数はGUIでの演算を可能にしていてコンピューターの操作を容易にする。
		PCだけではなく、タブレットのOSも公開されている。
	Windows
		microsoft社開発のOS、コンピューターにおいてのシェア率はNo1
		現在最新のOSはwindows 8
		デバイスに依存しなく、企業においても広く普及している。
	macOS (Mac OS X)
		Apple社開発のOS、基本的には自社製品に依存して搭載されるOS
		GUIをいち早く取り入れ、コンピューターの普及に貢献した。
		直感的な操作が可能になっており、洗練されたデザインが特徴
	UNIX
		AT＆T社開発のOS、現代OSの始祖となる。
		当初フリーライセンスとして公開されたため、その流れを組むOSの総称がUNIXとされる。（現在は商用化されているものもある。）
		アセンブリ言語での開発から、後に高水準言語で開発された（OS史上初）
		ソースコードが公開された事により、OSが普及していった。
		他のOSと大別される特徴としてはCUIが採用されている。
	Linux
		リナース・トーバルズ開発のOS
		UNIX系MINIXの流れを汲む。
		オープンソースソフトウェアとして配布されており、改変再配布も可能
		現在は多くのエンジニアにより開発されていっている。
		安定性が高く、スパコン、メインフレーム、サーバー等で多く用いられている。
■ 言語・環境
	マークアップ／フロントエンド
		フロントエンドは、Webサービスやアプリケーションにおいて直接ユーザーの目に触れる部分を指す。
		マークアップは、文章構造や視覚表現等コンピューターが認識できるようにタグを用いて、意味づけを行なっていく事。
	HTML（Hyper Text Markup Language)
		ウェブページを制作するために開発されたマークアップ言語
		また、ハイパーリンクを埋め込む事ができ、HTMLタグを用いて簡易的な装飾を施す事が可能 
	CSS（Cascading Style Sheets）
		ウェブページのスタイルを指定するための言語
		主にHTMLと組み合わせて使用する言語であり、HTMLで定義された情報構造に対し
		どのような装飾を施すかをしてする事ができる。
		HTMLは情報構造の領域、cssは装飾領域と区別をつけた構成が重要になる。 
	JavaScript
		NetScape Communications社開発のプログラミング言語
		Javaとは全くの無関係（マーケティング戦略）
		HTMLは主に静的Webの作成に対し、JSは動的Webの作成を行う事ができる。
		メッセージボックスの表示等ダイナミックな表現を作る事ができる。
	サーバーサイド
		サーバーが演算を行う言語
		Java,PHP,Ruby等
	.NET（C#, VB）
		環境に応じて提供された機能群の総称.NET
		.NET Framework上で動作する言語（C#,VBとの違い）
	Java
		Sun MicroSystem社開発の高水準言語
		オブジェクト指向の言語の元祖であり、のちの言語に大きな影響を与えている。
		またJVMを用いる事により、プラットフォームに依存しない開発を行う事ができる。
	Java SE
		Javaで用いられるAPIの総称
		特に基本となるAPIをまとめたもの
	Java EE（Jakarta EE）
		Javaで用いられるAPIの総称
		SEよりも大規模なシステム開発の際には用いられる事が多い
		SEの拡張機能と言う位置付けで、SEと併せて用いられる。
		Orcle社からEclipse FoundationにJava EEの管理が移管した事に伴い、
		Java EEはJakarta EEへ名称が変更になった。		
	Perl
		CGIに特化した言語
		テキスト処理が得意かつ、処理速度が非常に高速
	PHP
		Webに特化したプログラミング言語だが、
		サーバーサイドが特徴
	Ruby
		まつもとゆきひろ開発の国産言語
		大きな特徴はスクリプト言語かつオブジェクト指向
		Ruby on Railsフレームワークが存在しており、開発工程の短縮が国内において支持される理由の一つ
■ サーバーソフト
	Apache
		サーバーソフトウェアの１つ、最大手シェアを有する
		無償利用も可能（Tomcat）
	nginx	
		Apatchに次ぐシェアを誇るWebサーバー
		高速かつ大量のデータ処理が得意なことが大きな特徴
	IIS（Internet Information Services）
		無料で利用できるWebサーバーの一つ
		上記サーバーとは異なり、視覚的なマウス操作を行う事が可能と言う特徴を持つ	
		
■ SQL
	SQL（Structured Query Language）
		構造化問合せ言語、RDBのデータを操作するための言語
		サーバーソフト上にデータを挿入する際に用いる。（データベースに対してしか命令できない。）
		直接データベースへの命令文（対話型）
		プラグラミング言語の中にSQL文を埋め込み、命令する（埋め込み型）
	DB2
		米IBM社開発のリレーショナルデータベース管理システム（RDBMS）のブランド名
		基幹系システム構築を支える重要な基盤
	MySQL
		Oracle社開発のオープンソースRDBMSの一つ
		世界で最も普及しているRDBMSとして知られている。
		Facebook,Fickr,Twitter,Youtube等で用いられている。
	Maria DB
		MySQLの派生として開発されるRDBMS、開発元はMariaDB社
	Oracle DB
		Oracle社開発のRDBMS
		行レベルロック、読み取り一貫性、堅牢性、移植性などの特徴を有する。
	PostgreSQL
		拡張性とSQL準拠を特徴に持つオープンソースRDBMS
		PostgreSQL GDG開発
	SQLite
		パブリックドメインの軽量なRDBMS
		サーバーとしてではなく、アプリケーションに組み込み利用されるデータベース
		APIはライブラリを呼び出すだけであり、データ保存に単一のファイルのみを使用する事が特徴
	SQL Server
		Microsoft社開発のRDBMS
		問合せ言語はT-SQL,ANSISQLを用いる
		Windowsと相性が良い
	CRUD
		コンピューターが持つ永続性の基本機能４つの頭文字
		CREATE（生成）
		READ（読み取り）
		UPDATE（更新）
		DELETE（削除）
		ユーザーインタフェースが備えるべき機能を指す用語としても用いられる。
	トランザクション
		一連の動作のセットとした際の処理単位
		（処理を受け取る→演算を返す）１つのトランザクション
	コミット
		トランザクション処理において行われた結果を確定させる事、あるいは約束する事
	ロールバック
		トランザクション処理のキャンセルのこと、やりかけの処理の取り消し
	排他制御（排他ロック）
		複数の処理の要求（ダブルブッキング）を防ぐための仕組み
		１つのものを同時に複数使わせないようにロックする
	楽観ロック
		仮にダブルブッキングしても問題が少ない際に、ダブルブッキング処理に関しては楽観的に扱うよう
		設計されるロックのこと
	悲観ロック
		ダブルブッキングを必ず防ぐように設計されるロックの仕組み
		楽観ロックとは対比関係
	実行計画
		SQL文を実行可能なプログラムに変換する。オプティマイザ
	チューニング
		良い感じになるように何かを調整すること
		データの型がバラバラな際に、処理の軽量化や安定かの為に統一するなどの作業
	パフォーマンス
		性能または現在の処理の具合を指す
	スロークエリ
		MySQLで出力できるログの一つ
		SQLの実行時間が指定した時間よりもかかってしまったSQLを全て出力する事ができる。
	クエリログ
		クライアントからのMySQL Serverへの接続・接続解除の情報、及びクライアントから実行された全てSQLクエリを出力するログ
	IDE（Integrated Development Environment 統合開発環境）
		ソフトウェアの統合的な開発環境の事
		テキストエディタ、コンパイラ、リンカ、デバッガなどの各ツールを一つのGUIから利用できるように統合したもの
	Eclipse
		Eclipse Foundation開発のIDE
		主にJavaアプリの開発で用いられる事が多いが、プラグインを介して他のプログラミング言語の
		アプリケーションを開発することもできる。
	NetBeans	
		Oracle社開発のIDE
	SpringToolSuite
		Spring Framework開発のIDE
		Eclipseをベースとして作られている。
		Spring Frameworkを利用した開発に適した機能が備えられている。
	DBツール
		データベース管理タスクに使用できるツール
	A5:SQL Mk-2
		複雑化するデータベース開発を支援するために開発されたフリーのSQL開発ツール
		とても便利
	pgAdmin
		GUIによるPostgreSQLの管理ツール
	DBeaver
		SQLクライアントソフトウェアアプリ
		JDBCドライバーを介してデータベースと対話する。
	MySQL Workbench
		MySQL Workbenchは、SQL開発、管理、データベース設計、作成、および保守を
		MySQLデータベースシステムの単一の統合開発環境に統合するビジュアルデータベース設計ツール。
	Sequel Pro
		Mac用のMySQLのデータをGUI操作で管理するためのアプリケーション
	TeamSQL
		SQLクライアントソフト（サービス終了）
■ 肩書
	PM（プロジェクトマネージャー）
		プロジェクトの運営、品質、納期等に責任を持ちプロジェクトを円滑に推進させる役割を果たす、
		プロジェクト管理社のこと。
		業務内容として、プロジェクトメンバーの選定、顧客折衝、案件受注、要件定義、品質管理、納期、進捗管理、コスト管理等
	PL（プロジェクトリーダー）
		PMが目を配れない規模のプロジェクトにおいて、PMの補佐的にPGを小規模のチームとして管理する。
		業務内容として、プログラム品質のチェック、グループ間の情報伝達チェックなど内向きな管理
		
	PG（PE）
		SEの用意した仕様書をもとにプログラミング、単体テストを行う。
	SE
		顧客間での要件の確定や使用の検討などの上流工程業務
	デザイナー
		クライアントや依頼者の求めに応じたデザインを考案する仕事。
		WEBデザイナーは、様々なwebサイトのデザインを行う仕事、そのサイトの目的やコンセプトを考慮し、ユーザーにとってどこに何が有るか、わかりやすく使いやすいデザインの作成
	エンジニア
		プログラミング技術を利用してものづくりを行う技術者のこと
	フロントエンド・エンジニア
		フロントエンドとはクライアント側、WEBブラウザ側で作動する部分のことを指す。
		デザイナーが設計したデザインをもとにHTML,CSS,JavaScriptを駆使してブラウザに表示できるようにコーディングを実施する。
	サーバーサイド・エンジニア
		サーバーにデータを保存するために処理したり呼び出したりする環境を作成し、メンテナンスやバージョンアップを行う仕事
	バックエンド・エンジニア
		プログラム開発からWEBサーバー、データベースといった環境整備まで幅広く担当する、WEB系の技術者
		ユーザーからは見えないバッグエンドのシステム部分を構築する
■ UI（ユーザーインターフェース）
	UI（User Interface）
		ユーザーとの接点
		ユーザーとサービスの接点やユーザーと道具をつなぐものを意味する。
		デザイン全般や、メディア、サイト内検索機能など接点全てがUIにあたる。
		ハードウェアなどのディスプレイを介在しないものもUIに含まれる
	CUI（Character-based User Interface）（CLI -command Line Interface- ）
		文字を介したユーザーとの接点
		主にユーザーはキーボードを介して指示を与え、コンピューターは演算結果をディスプレイ装置に文字として情報を提示する対話式の操作環境が一般的
		ターミナル、コマンドプロンプトなど
	GUI（Graphical User Interface）
		主にユーザーはマウスやタッチスクリーンなどによる画面上の位置の指示により行う事ができるもの
		視覚的にソフトを操作する事ができる。
		家電などは主要な表示、操作方式としてGUIを採用している。
■ ファイル／ディレクトリ
	ファイル
		コンピューターにおけるデータの管理単位の一つ
		ストレージ装置などにデータを記録する際に利用者やOSから見て最小の記録単位となるデータのまとまり
	拡張子
		ファイルの種類を表す定型句
		ファイル名と拡張子の間はドットで区切られる
	ディレクトリ（directory 住所）
		ファイルを管理したり、分類したりできる保管場所
		保管するだけでなく、整理整頓され種類ごとに分類され一覧できるものがディレクトリになる
	ルート・ディレクトリ
		階層型ファイル構造における最上階層のディレクトリ（フォルダ）のこと、ルートは「根底」
		HDDやFDDなど、ファイル格納の大元が該当する
	カレント・ディレクトリ(current directory）
		現行ディレクトリ、階層型ファイルシステムを使用している場合の、現在の位置であるディレクトリを指す。
		「作業ディレクトリ」	
	パス（path 小道、道筋、進路）
		ディレクトリが多段階の入れ子上で構成されている。
		階層構造の最上位から順にディレクトリ名を並べて記したものがパス	
	絶対パス
		どこからアクセスしてもアドレスが変わらないパス
		長所：アドレスが変わらないので、総じて同パス同アドレスとなる普遍性
		短所：パスが長くなる（ルートから全て記す必要がある）
		　　　サイトの場所が変わった場合の変更が面倒
	相対パス
		サイトが変わってもフォルダ構成が同じとなるパス
		長所：オフラインでも構成が一緒ならオフラインの動作確認が可能
		　　　パスがシンプルになる
		短所；同じファイルを指定しても、指定の始点によりパスが変わる
■ ネットワーク
	LAN（Local Area Network）
		局所的範囲通信
		限られた範囲内にあるコンピューターや通信機器、情報機器と接続し相互でデータ通信できるようにしたネットワークのこと。
		室内や、建物ない程度の広さで構築される事が多い
	WAN（Wide Area Network）
		広域的通信
		遠く離れた場所とつながるパブリックなネットワーク
		回線事業者の設置機器（モデムがWANとLANをつなぐ役目をする）
	クライアント（Client)
		サーバーに対してサービスの依頼を行い、その提供を受けるコンピューターアプリケーションやプロセスを指す。
	サーバー（Server）
		ホームページなどの表示に必要となる情報を格納しておく場所を指す
		受け取る側をクライアントと呼び、サーバーはクライアントからのリクエストに応じて、保管しているファイルを提供する
		サーバー自体には様々な用途が存在する。
		ハードウェアをサーバーと呼ぶ場合もある。提供者
■ 各種プロトコル
	HTTP（Hypertext Transfer Protocol）
		WEBブラウザがWWW上でWebサーバーとクライアントが、HTMLで書かれた文書などの情報をやり取りするときに使われる通信手順（プロトコル）のこと。
	FTP（File Transfer Protocol）
		サーバーとクライアント間で、ファイルを送受信する通信の決まり事
		その他にFTPサーバーやFTPクライアントなど多様な意味を持って語られる事が多い
	HTTPS（Hyper Text Transfer Protocol Secure）
		直訳で安全なhttpの事、SSL/TSLで送受信される情報に鍵をかけ、サーバーとクライアントだけに配布する。
		そのために必要なのはSSL証明書であり、SSLサーバー証明書を発行し、サイトのサーバーにインストールする事でhttps化が行える。
	SSL（Secure Sockets Layer）
		インターネット上でやりとりされる情報を暗号化する仕組みのこと
		インターネット上でのデータの通信を暗号化し、盗聴や改竄を防ぐ仕組み（プロトコル）のこと
		役割は主に３つ存在する。
		・データの盗聴を防ぐ
		・データの改竄を防ぐ
		・なりすましを防ぐ
		TLS（Transport Layer Security）とも呼ばれる
	ポート、ポート番号（port）
		IPアドレスは住所と捉えられ、ポートは外に出る「扉」と例えられる。
		インターネットはIPアドレス＋ポート番号で実際には通信が行われている。
		サーバー側のポートは固定の番号が定められており、常に扉が開いた状態になっている。（基本的には８０番ポートが入り口）
		クライアント側のポートはセキュリティのために毎回変わり、都度ポート開閉が行われる。
		「４９１５２〜６５５３５」が主に使用され、ポート番号を指定することはできない。
		実際開く時間は数秒以内となる。
	HTTP、FTP、SSHの各ポート番号
		HTTP：８０番
		HTTPS:４４３番
		FTP：FTPは２つのTCPセッションを使う特徴を持つ（「制御コネクション」「データコネクション」）
		　　　コネクションを分けることで、大量のデータの送受信中でも確実にFTPコマンドをやり取りする事ができるのが特徴
		　　　制御コネクションは２１番が割り当てられる。
		　　　データコネクションには２０番が割り当てられる。
	ファイアウォール（Firewall）
		ネットワークの通信において、その通信の可否を判断し、許可または拒否する仕組み。
		対象は送信元と宛先の情報を見て決められ、通信の内容は見ていない。（荷物の宛先情報は確認するが、中身は見ていない）
		
	TCP（Transmission Control Protocol）
		「伝達コントロール用のお約束ごと」
		通信プロトコルは複数存在するが、その中でも安全重視でやり取りするという取り決めのプロトコル
		送ったデータが相手に届いたか、その都度確認しながら通信するやり方
		信頼性は高いが転送速度が低いという特徴を持つ
		比較対象としてUDPが挙げられる。
		送った内容が届いたかの確認をしないため、スピード重視だが信頼性は低い
■ IPアドレス
	IPアドレス（Internet Protocol Address）
		インターネット上に接続された機器が持つナンバーのこと
		データのやり取りの際にネットワーク上で通信相手を間違わないようにするために使われる。
		インターネット上での住所のような役割を持つ
		IPv4:32ビット（桁）の２進数での構成を８ビットごとに.で区切り１０真数表記したものそれぞれ０〜２５５まで存在する
		     ネットワーク部とホスト部から構成され、その教会はIPアドレスによって異なる。
	グローバルIPアドレス
		インターネットに接続するタイプのIPアドレス
		動的IPアドレスと静的IPアドレスに分かれる。
		動的IPアドレス：変動するIPアドレス
			     一般的には家庭でインターネットサービス・プロバイダーに接続する場合など
			　　　インターネットに接続すると自動的にグローバルIPアドレスがISPより割り当てられる。
		静的IPアドレス（固定IPアドレス）：変動しないIPアドレス
			　　　接続のたびにコロコロ変わって欲しくない場合に導入が必須になっている。
			　　　具体的にはホームページの公開サーバーやメールの送受信のためのメールサーバーの場合
	プライベートIPアドレス
		家庭内でのインターネットからは独立したネットワークのこと
		家庭内のネットワークにあるパソコンなどに付与されているIPアドレスがプライベートIPアドレス
		プライベートIPアドレスは直接グローバルIPアドレスとやり取りすることはできず、NAT（Network Address Translation）という機能が必要になる。
		NATはプライベートIPアドレスとグローバルIPアドレスに変換する機能
■ ドメイン
	ドメイン（Domain）
		インターネット上での住所のようなもの
		（https://www(ホスト部）.hogehoge（ドメイン部）.hg/
		ブラウザにURLを打ち込むことにより、インターネット上の表示する場所を指定する事ができる。
	DNS（Domain Name System）
		URLを入力するとコンピューターはまずDNSサーバーに情報をもらいに行く。
		IPアドレスは本来数字の羅列で構成されているが、会社名などのドメインに置き換えられている。
		DNSサーバーはDNSに登録されている情報からIPアドレスと検索して回答した結果、ブラウザがたどり着く
	VPN（Virtual Private Network）
		架装専用線を指す、パブリックなネットワークでは個人情報が盗み見される可能性がある。
		VPNはインターネット上に仮想の専用線を設け、安全なルートを確保した上で重要な情報をやり取りすることで、
		脅威から情報を守る事ができる。
	ブリッジ（bridge）
		ネットワークの分野で複数のネットワークセグメントを結ぶ中継機器のうち、受信したデータのMACアドレスなどデータリンク層宛先情報を参照して
		中継の可否を判断する機能を持ったもの。
		ネットワークブリッジ、あるいはブリッジという
	プロキシサーバー（Proxy Server）
		英語で代理の意味、直接インターネットに接続できないコンピューターに変わり、インターネットに接続しWEBサイトへのアクセスを行うサーバーのことを指す
		ネットワーク内におけるインターネットへの出入り口をプロキシサーバー経由に限定する事で、外部からの不正アクセスを防止したり、業務と関係ないWebサイトへのアクセスを禁止したりすることができる。
■ 電子メール
	SMTP（Simple Mail Transfer Protocol）
		簡易メール転送プロトコル、インターネットで電子メールを転送するプロトコルのこと。
		通常ポート番号２５を利用する。
	POP（Post Office Protocol）
		郵便局の手順
		サーバーにあるメールをパソコン等の端末にダウンロードして、端末上でメールを管理する仕組み
		メリットは、保存したメールの削除・移動糖を素早く処理でき、容量の許す限りメールを保存できる。
		デメリットは、複数のパソコン等でのメール利用は使い勝手が悪く、同時に複数台の端末で受信を行う事ができない。
	IMAP（Internet Message Access Protocol）
		IMAPはサーバーにあるメールをパソコン等の端末にはダウンロードせず、サーバー上でメールを管理する仕組み
		メリットはサーバー上でメールを管理するため、複数端末での利用に優れている。開封状態も共有されるためメールの一元管理が可能
		デメリットは、メールサーバーの容量制限に達した場合、不要なメールをサーバー上から削除しなければ、新規に送られたメールを閲覧する事ができなくなる。
		
■ セッションとクッキー
	セッション
		アクセス開始から終了までの一連の通信のこと。
		Webサイトのアクセス解析などの指標でもあるセッションは、サイトにアクセスしてから一定時間経過する事で通信が終了し、１セッションとしてカウントされる。
		セッションのポイントは一連の通信である事
		特定のサイトで複数ページを閲覧したとしても、一連の通信の中で行われたものとなり、１セッションになる
	クッキー（coolie）
		閲覧したWebサイトからスマホやPCの中に保存される情報のこと
		テキストファイルで構成されておりwebサイト側は厳格なルールの中でどのような情報を保存するかを決めプログラミングされている。
		クッキーがあるおかげで、サイト毎に自動ログインされる等のメリットがある。
	キャッシュ
		訪問したwebページの情報を一時的に保存する仕組み。
		よく訪問するページの表示スピードが上がるというメリットがある。
		クッキーとは異なり、画像やテキスト情報を保存する事ができる。
■ DB（データベース）について
	インデックス（索引）
		探すレコードを識別するデータの項目と対象レコードの格納位置を示すポインタで構成されている。
		これを利用して格納位置を特定しその位置に直接アクセスすることで、表の検索速度をあげる事ができる。
■ テストについて
	フロー
		ホワイトボックステストを行うにあたり、フローチャートを活用することで論理構造を視覚化する
		ガバレッジ基準…着目する要素のことを指しそれらをどれだけ網羅できているかを割合で示す。
		・ステートメントカバレッジ
			フローチャート内から要素として，「命令文」を選択した場合
		・デシジョンカバレッジ
			フローチャート内から要素として，「分岐した経路」を選択した場合
		・複合条件カバレッジ
			条件に含まれる全てのパターンを満たす場合

		全てのガバレッジは選択した経路を最低一度は通る必要がある。


■ チケット管理ツール
	タスク
		チケット管理ツールはタスク管理ツールを指す。
		プロジェクト毎に発生する各種タスクを発行して、製作者に対して仕事を依頼するためのもの。
		エンジニアにとって口頭で受ける指示は非常にリスクになるため、
		そういった水掛け論を事前に防ぐためにも、チケット管理ツールを用いるタスク管理が重要である。
■ バージョン管理
	Git
		プログラムソースなどの変更履歴を管理する分散型のバージョン管理システムのこと
		最大の特徴はローカル環境に、全ての変更履歴を含む完全なリポジトリの複製が作成されるということ。
		GitHubはこの仕組みを利用して、世界中の人々が自分の作品を保存・公開する事ができるようにした
		ウェブサービスの名称
	
		
	SVN
		Apache Subversionを指す。
		バージョン管理システムの一つで、ファイルの変更履歴を管理する事ができる。
		Gitとは異なり、単一型リポジトリ管理方法を採用している。
	デグレ
		degrade（先祖返り）の省略表現。
		プログラムにおいて、直したはずのバグが新たなバージョンで復活していたり、
		前は存在しなかったはずのバグが悪t理、実装したはずの機能がなくなっている状態のこと。

	マージツール
		バージョン管理システムなどで管理している開発中のプログラムなどに、新たにコードを追加したり
		修正したり、マージを行うツール