■ 開発

	・ウォーターフォール開発
		開発手順を１つずつ確認しながら工程を進めていく手法。
		次のフェーズに進むと後戻りができないデメリットがある。
		
	・アジャイル開発
		クリア運との要望に応えるシステムをできる限り素早くリリースしようという考えに基づく開発手法
		
	・マイグレーション（migration-移行、移転）
		ソフトウェアやシステム、データなどを別の環境に移転したり、新しい環境に切り替えたりすることを意味する。
		
	・デグレーション（degration-劣化）
		システム開発におけるプログラム修正やインフラ設定の変更等により、
		それまで正常に動作していた機能が動かなくなる、品質低下のトラブル事象を指す。
		
	・デプロイ（deploy-配置する、展開する）
		ソフトウェアを構成するプログラムなどをパッケージ等にまとめ、使用環境に導入可能な状態に組み立てる工程
		広義には、配備済みのプログラムの修正や更新、入れ替え、必要なくなったソフトウェアの撤去など、運用開始後の行程を含む場合がある。
		
	・コンフリクト（conflict-競合、対立）
		複数の装置やプログラムなどが同じ資源を同時に利用しようとして、競合状態になってしまう事
	
	・環境
		ある装置やソフトウェアにとって、それが導入されるコンピュータのハードウェアの構成や設定、
		OSなどソフトウェアの構成や設定、および、それら全体の組み合わせのこと。
		
	・開発環境（ローカル）
		実際のサーバーにアップする前に、サイトの動作や表示確認を手持ちのパソコン内で行うこと。
		ローカル開発環境によりインターネット上のサイトに影響を与えることなく、安心してカスタマイズを行うことが可能になります。
		
	・検証環境（ステージング）
		システムを公開する手前の段階で、実際にサービスを提供する環境（本番環境）とほぼ同じ環境にシステムを反映させ、
		動作や表示などの最終確認を行う段階、もしくは環境のことである。

	・本番環境
		システム開発に関する用語で、システムが製品として実際に稼動している環境のことである
		
	・設計書／仕様書
		「設計書」→その仕様を実現する為に、「どのようなシステム構成にするか？」、「どうやって作るか？」という実現方法を記載した書類
		「仕様書」→こう有るべきという仕様（決め事）を記載する書類
		
	・要件定義
		本格的な開発工程の前段階で、開発者の視点から要求をまとめ、具体的な進め方を決めること
		
		・基本設計書
		顧客の要望に対して、このようなシステムを作りましょうという全体像や概要をまとめた資料のこと
		
		・詳細設計書
		基本設計で決められた動きを、どうやって実現するかを説明した資料。
		
		・テスト
		
		・単体テスト（UT　Unit Test）
		プログラムを構成する比較的小さな単位（ユニット）が個々の機能を正しく果たしているかどうかを検証するテストの事
		
		・結合テスト（CT／IT Combined Test / Integration Test）
		システム開発におけるプログラムの検証作業の中でも、手続きや関数といった個々の機能を結合させて、うまく連携・動作しているかを確認するテストの事
		
		・総合テスト（ST System Test）
		実際の運用形態に沿ってテストをする事
		
		・エビデンス／証跡（evidence -証拠、痕跡）
		システム開発のテスト工程などで、システムが正しく動作している、あるいは不具合が生じたことを示す証拠となる書類やデータなど
		
		・データパッチ（patch -継当て）
		ソフトウェアを構成するプログラムやデータを更新・修正するために、新しい版との相違点（差分）を抜き出したデータのこと
		
		・Access
		Microsoft製のデータベース管理ソフトです。データを管理することに重きを置いたソフト
			-データベースを使ったデータ管理
			-ユーザーフォーム(画面)を使ったアプリの開発
			-レポート機能を使った見やすい資料の作成
		
		・マクロ
		複数の操作をまとめて必要に応じて呼び出せるようにする機能
		
		・VBA（Visual Basic for Applications）
		Officeにおいてマクロの操作内容を記録するためのプログラミング言語
		
		・GAS（Google Apps Script）
		Googleが開発・提供しているプログラミング言語です。JavaScriptというWebブラウザ上で動作するプログラミング言語をベースに作成されている。
		
		・API（Application Programing Interface -アプリケーションをプログラミングするためのインターフェース）
		ソフトウェアやアプリケーションなどの一部を外部に向けて公開することにより、
		第三者が開発したソフトウェアと機能を共有できるようにしてくれるものです。
		
		・WEB API
		HTTPプロトコルを用いてネットワーク越しに呼び出すアプリケーション間、システム間のインターフェースの事
		
		・REST API（REpresentational State Transfer）
		Webシステムを外部から利用するためのプログラムの呼び出し規約(API)の種類の一つで、
		RESTと呼ばれる設計原則に従って策定されたもの
			-RESTの4つの設計原則
				１セッションなどの状態管理を行わない。(やり取りされる情報はそれ自体で完結して解釈することができる)
				２情報を操作する命令の体系が予め定義・共有されている。（HTTPのGETやPOSTメソッドなど）
				３すべての情報は汎用的な構文で一意に識別される。（URLやURIなど）
				４情報の内部に、別の情報や(その情報の別の)状態へのリンクを含めることができる。
				・リソースに対してURLが対応づけられる。（そのため、URLが名詞的になることが多い）
		
		・SOAP（Simple Object Access Protocol）
		異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル（規約）の一つ。
		メッセージの記述にXMLを、データ伝送に主にHTTPを用い、Webサービスの提供や利用に適しているとされる。
		
		・Ajax（Asynchronous JavaScript + XML）
		あるWebページを表示した状態のまま、別のページや再読込などを伴わずにWebサーバ側と通信を行い、
		動的に表示内容を変更する手法。ページ上でプログラムを実行できるプログラミング言語JavaScriptの拡張機能を用いる。
		
		・XML（Extensible Markup Language -拡張可能なマークアップ言語）
		マークアップ言語のひとつで、拡張子は.xml
		HTML（Hyper Text Markup Language）は、主にWebページを表示するために利用されるマークアップ言語。
		HTMLは既にタグが決まっているのに対して、XMLでは独自に決めたタグ名を利用できるのが大きな違い。
		
		・JSON（JavaScript Object Notation）
		JavaScript のデータ定義文をベースとした、簡易的なデータ定義言語です。
		JavaScript だけではなく、Java, PHP, Ruby, Python など、様々な言語間のデータ交換、特に Ajax や REST API などで使用されています。
		
		・ステータスコード
		HTTPステータスコード（HTTP Status Code）とも呼ばれる、HTMLを表示する前にブラウザが受信する3桁の番号
		番号は100-510までの間で割り振られていて、
		各数値にはそれぞれ意味が付与されています。この3桁の数値を「HTMLを受信する前に」受信することで、ブラウザは正しい処理ができるようになる。
		
		・クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing -オリジン間リソース共有）
		あるオリジンで動いている Web アプリケーションに対して、
		別のオリジンのサーバーへのアクセスをオリジン間 HTTP リクエストによって許可できる仕組みのこと.
		
		・バリデーション（Validation -検証、認可）
		データのバリデーションといった場合、記述・入力されたデータが、あらかじめ規定された条件や仕様、
		形式などに適合しているかどうかを検証・確認することを表す。形式的な妥当性の検証であり、意味論的に適切な内容かどうかは判断しない。
		
		・データ連携
		異なるアプリケーションやシステムをまたいでデータを共有、活用するために、それぞれの言葉や解釈の垣根を取り払うプロセス
		
		・Daemon
		UNIX系OSでメインメモリ上に常駐して特定の機能を提供するプログラム。利用者の操作とは無関係に処理を行うバックグラウンドプロセスの一種で、
		別のプログラムや機器、通信相手など外部からの要求を受け付けて処理を実行したり、あらかじめ設定されたタイミングで自律的に特定の処理を実行したりする。
		
		・CRON
		多くのUNIX系OSで標準的に利用される常駐プログラム（デーモン）の一種で、
		利用者の設定したスケジュールに従って指定されたプログラムを定期的に起動してくれるもの
		
		・バッチ（Batch -一回分にまとめる）
		複数のプログラムからなる作業において、あらかじめ一連の手順を登録しておき、まとめて連続的に実行する方式。
		または、一定期間や一定量ごとにデータをまとめて一括して処理する方式。
		
		・ログ（Log -記録）
		ログとは、コンピュータの利用状況やデータ通信など履歴や情報の記録を取る事、またその記録を指す。
		操作やデータの送受信が行われた日時と、行われた操作の内容や送受信されたデータの中身などが記録される。
		
		・CSV（Comma Separated Value -カンマで区切った値）
		各項目がカンマで区切られているテキストデータ
		Excelファイルとの違いは、互換性が高いか、装飾・機能の自由度が高いかという点
		
		・TSV（Tab Separated Value -タブで区切った値）
		各項目間がタブで区切られているテキストデータ
		基本的にはCSVを用いることが多い。
		
		・プルリクエスト（マージリクエスト）
		コードの変更をレビュワーに通知し、マージを依頼する機能です。コードのレビューを受けることで、
		1人で作ると気がつかないコードの指摘やバグや記述ミスの発見ができコードの品質を高める。
		
■ チケット管理ツール
		・asana
		ワークマネジメントツールの一つ。
		協業の効率化を図ったwebベースのSaaSであり、利用者はメールを使わずオンライン上で事業計画や職務を管理できる。
		
		・Backlog
		株式会社ヌーラボ提供のプロジェクト管理ツール。
		プロジェクトで発生するタスクや問題、Todoなどの進捗状況をWeb上で一括管理し、調整していくことができる管理ツール。
		
		・Jooto
		株式会社PR TIMESが提供の、クラウド型のプロジェクト・タスク管理ツール。
		ドラッグ・アンド・ドロップで操作できるシンプルなプロジェクト管理を実現。
		
		・Readmine
		Webベースのプロジェクト管理ソフトウェア.
		Redmineはプログラミング言語Ruby本体の開発を始めとして、さまざまな企業・団体やプロジェクトでの導入が報告されている
		
		・Trello
		Fog Creek Software開発のウェブアプリケーション
		各プロジェクトは見た目が付箋で示されるタスクを掲示板に表示する形式である。タスクはドラッグ＆ドロップにより利用者に割当てられ、
		コメント・添付・投票・期日・チェックリスト機能を追加できる。
		
		
■ バージョン管理

		・集中型
		プロジェクトの中央レポジトリを全員が編集
		ある1つのサーバで中央集中型システムは稼働し、だれでもそのサーバからファイルのコピーを取得して作業ができる。
		
		・分散型
		ロジェクトの完全なレポジトリを各自が保有
		散型は複数のリポジトリを持つことができる。
		
		・Github
		Gitの仕組みを利用して、世界中の人々が自分の作品(プログラムコードやデザインデータなど)を保存、公開することができるようにしたウェブサービスの名称。
		GitHubはGitHub社という会社によって運営されており、個人・企業問わず無料で利用することができる。。
		
		・Backlog
		株式会社ヌーラボ提供のプロジェクト管理ツール。
		プロジェクトで発生するタスクや問題、Todoなどの進捗状況をWeb上で一括管理し、調整していくことができる管理ツール。
		
		・SourceTree
		GUI形式でGitを扱うことのできるバージョン管理システム
		
		・Tortoise SVN
		バージョン管理システムであるSubversionのクライアントフロントエンド。GNU General Public Licenseのもとに配布されているフリーソフトウェア
		
		・Git Flow
		A successful Git branching model」というブランチモデルをサポートするツール（コマンド）の名称
		細かくブランチを切った厳格な運用モデル。
		masterブランチ、developブランチ、releaseブランチ、featureブランチ、hotfixブランチ、supportブランチの6種類を用意する。
		
		・master
		リリース可能な完全品質を保証するブランチ。releaseブランチからのマージのみで更新される。
		masterブランチ上で直接作業したりコミットするのはNG。tagはmasterブランチ上でのみ存在する。
		
		・release
		リリース作業を行うためのブランチ。developブランチから派生させる。
		リリース作業が完了したらmasterブランチとdevelopブランチにマージする。masterブランチにマージする際のコミットではtagを打つ。
		マージされたら該当のreleaseブランチは削除する。
		
		・develop
		開発の主軸になるブランチ。masterブランチから派生させる。
		developブランチ上で直接作業したりコミットするのはNG。developブランチからfeatureブランチやreleaseブランチを切る。
		
		・feature
		機能追加および修正作業を行うためのブランチ。developブランチから派生させる。
		作業完了してレビューが通ったら、developブランチにマージする。
		どのような機能追加を行うブランチなのかが一目で分かるようなブランチ名を心がける。
		マージされたら該当のfeatureブランチは削除する。
		
■ FW／ライブラリ

		・FW（フォームウェア）
		コンピュータや電子機器などに内蔵されるソフトウェアの一種で、
		本体内部の回路や装置などの基本的な制御を司る機能を持ったもの。
		
		・Spring Framework
		Java言語によるソフトウェア開発を支援するフレームワークの一つ。
		様々な開発プロジェクトに適用できる汎用性の高さとモジュール化された豊富な機能に定評がある。
		
		・Struts
		Javaを用いてWebアプリケーションを開発するためのフレームワークの一つ。
		Apacheソフトウェア財団（ASF）が開発を主催し、オープンソースソフトウェアとして公開している。
		
		・JSF（Java Server Faces）
		Java言語を用いてWebアプリケーションを開発するためのフレームワークの一つ。
		Javaの開発元であるOracle社が開発・提供しているもので、その仕様はJava EE（Java Platform, Enterprise Edition）の一部として取り込まれている。
		
		・ライブラリ（library）
		ある特定の機能を持ったコンピュータプログラムを他のプログラムから呼び出して利用できるように部品化し、
		そのようなプログラム部品を複数集めて一つのファイルに収納したもの
		
		・Bootstrap
		米ツイッター（Twitter）社が開発したオープンソースのWebアプリケーションフレームワーク。
		既成の要素や雛形を使用して迅速にWebアプリケーションを開発することができる。
		
		・Flyway
		FlywayはJVM上で動作するデータベースのマイグレーションツール
		
		・Jackson
		Jacksonはjavaのライブラリで、JSONオブジェクトをJavaオブジェクトにマップしたりその逆を行うことができる。
		
		・jQuery
		Webブラウザ上で動作するJavaScriptライブラリの一つ。ブラウザの種類に依らず簡潔な記述で豊富な機能を活用することができる。
		オープンソースとして公開・配布されている。
		
		・Junit
		Java言語で開発されたプログラムの単体テスト（ユニットテスト）を行なうためのソフトウェア。
		また、そこで用いられるテストコードの記述体系を含むテストフレームワーク。
		
		・Log4j
		Javaのロギングユーティリティ。元々はCeki Gülcüにより開発されていたが、現在はApacheソフトウェア財団のプロジェクトの一つとなっている。
		主にデバッグ用ツールとして使用されている
		
		・Lombok
		アノテーションを付けるだけで、 getter, setter, toString, equals などの「何度も繰り返し書くコード」をコンパイル時に自動生成してくれるようになる機能
		
		・ORM（Object/RDB mapping）
		オブジェクト指向プログラミング言語におけるオブジェクトと、
		リレーショナルデータベース（RDB）の間でデータ形式の相互変換を行うこと。そのための機能やソフトウェア
		
■ 連絡ツール

		・ChatWork
		Chatwork株式会社が提供するクラウド型ビジネスチャットツールである。
		メッセージのやりとりだけでなく、タスク管理やファイル共有、ビデオ通話などが可能
		
		・Slack
		スチュワート・バターフィールドによって開発されたチームコミュニケーションツールの事
		
		・IP Messenger
		白水啓章開発のLAN用メッセンジャーソフト
		同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できるソフトウェア
■ Java
		Javadoc
		アノテーション
		メモリ管理
		ヒープ
		GC
		GoF
		デザインパターン
■ その他
		オブジェクト指向
		バッチ処理
		コンパイル
		カバレッジ
		プラットホーム
■　業界用語
・業務の会話中に使用する言葉